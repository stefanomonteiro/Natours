.row{
    max-width: $grid-width; //Standard is to set it at 1140px (114rem); MAX_WIDTH means that if we have enough space width is 114rem, however if viewport is smaller widht will fill 100% of space
    margin: 0 auto; /* top bottom*/ /*left right*/ //trick to center block elements inside other block element. Auto means that the browser figure out left and right margin. Since both(left and right) are set to auto it will be the same, so element is centered.

    @include respond(tab-port){
        max-width: 50rem;
        padding: 0 3rem;
    }

    &:not(:last-child){ // It selects everything except the last child
       margin-bottom: $gutter-vertical;

       @include respond(tab-port){
            margin-bottom: $gutter-vertical-small;
        }
    }

    @include clearfix; //Because all the childs have the float property the height of the row was set to zero. In order to fix we use clearfix;


    //Atribute Selector can be used to select by attributes (src, alt, class, etc.)
    [class^='col-']{// select every element that contains class that start with 'col-'. *(selects which contains). $(selects which ends)
        float: left;

        &:not(:last-child){
            margin-right: $gutter-horizontal;

            @include respond(tab-port){
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
            }
        }

        @include respond(tab-port){
            width: 100% !important; //Set the width of all the columns to 100%.
        }
    }

    .col-1-of-2{
        //width is the entire row less the gutter divided by num of col;
        width: calc((100% - #{$gutter-horizontal}) / 2); //Calc() makes math operations with mixed units (%,px,rem, etc.);
                        // In order to use variable inside calc #{};
    }

    .col-1-of-3{
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-2-of-3{
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-1-of-4{
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4{
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4{
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + (2 * #{$gutter-horizontal}));
    }
}