.header{
    height: 95vh; /* 95% of Viewport Heigh */
    background-image: linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.8),
        rgba($color-primary-dark, 0.8)),
    url(../img/hero-small.jpg);
    background-size: cover; /* cover: try to fit the element inside the box */
    background-position: top;/* set how image will be cropped as size changes. top: won't crop top, center: will crop sides equally */
    position: relative;

    @supports (-webkit-clip-path: polygon(0 0)) or (clip-path: polygon(0 0)){ //Checking browser support.
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* https://css-tricks.com/almanac/properties/c/clip/ */
        /*clip-path: circle(50% at left);*/
        /*clip-path: ellipse(60% 20% at center);*/
        /*clip-path: inset(100px 50px);*/
    }

    @media (min-resolution: 192dpi) and (min-width: 37.5em), // the comma reads 'or'
            (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em), //In order to work in Safar
            (min-width: 125em) {  // 125em = 2000px
            background-image: linear-gradient(
            to right bottom,
            rgba($color-primary-light, 0.8),
            rgba($color-primary-dark, 0.8)),
        url(../img/hero.jpg);
    }

    @include respond(phone){
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    }

    &__logo-box{
    position: absolute; /* absolute position needs to have a reference. The reference is the first element with the relative position it can find up in his parent tree */
    top: 4rem; /* 40px */
    left: 4rem; /* 40px; */
    }

    &__logo{
    height: 3.5rem;/* 35px; */
    backface-visibility: hidden;
    }

    &__text-box{
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);/* It shifts the element 50% of its heigh and width ////  The transform property allows you to visually manipulate an element by skewing, rotating, translating, or scaling. https://css-tricks.com/almanac/properties/t/transform/*/
    text-align: center;/* Align the Text and in this case the button as well. The button was set to display:inline-block, so it is treated as it was a text element. */
    }
}
