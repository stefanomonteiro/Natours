.form{
    &__group:not(:last-child){
        margin-bottom: 2rem;
    }

    &__input{
        font-size: 1.5rem;
        font-family: inherit; //form fonts are not automatically inherity by browsers
        color: inherit;
        padding: 1.5rem 2rem;
        border-radius: 2px;
        background-color: rgba($color-white, .5);
        border: none;
        border-bottom: 3px solid transparent; //to avoid that the :focus border-bottom moves the elements underneath with the additional border.
        width: 90%;
        display: block;
        transition: all .3s;

        @include respond(tab-port){
            width: 100%;
        }

        &:focus{
        outline: none;
        box-shadow: 0 1rem 2rem rgba($color-black, .1);
        border-bottom: 3px solid $color-primary;
        }

        &:focus:invalid{
            border-bottom: 3px solid $color-secondary-dark;
        }

        &::-webkit-input-placeholder{
            color: $color-gray-dark-2;
        }

    }

    &__label{
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top: 0.7rem;
        display: block; //so the box-model properties (margin/padding) won't work.
        transition: all .3s;
    }

    // when the place holder is shown follow this style
    &__input:placeholder-shown + &__label { // '+' adjacent sibling selector - selects the first sibling// Use '~' in case it isn't the first sibling
        opacity: 0;
        visibility: hidden; // visibility: hidden X opacity: 0 // visibility removes the element from the page whereas opacity makes it transparent. In this case we need opacity to create the animation.
        transform: translateY(-4rem);
    }

    &__radio-group{
        width: 49%;
        display: inline-block; //avoids line break and displays them side-by-side.

        @include respond(tab-port){
            width: 100%;
            margin-bottom: 2rem;
        }
    }

    &__radio-input{
        display: none;
    }

    &__radio-label{
        font-size: $default-font-size;
        cursor: pointer;
        position: relative;
        padding-left: 4rem;
    }

    &__radio-button{
        height: 3rem;
        width: 3rem;
        border: 5px solid $color-primary;
        border-radius: 50%;
        display: inline-block;
        position: absolute;
        left: 0;
        top: -.4rem;

        &::after{ //the inside dot that represents radio selected
            content: ""; //always when is a pseudo element.
            height: 1.3rem;
            width: 1.3rem;
            border-radius: 50%;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: $color-primary;
            opacity: 0;//initial state
            transition: opacity .2s;
        }
    }

    &__radio-input:checked + &__radio-label &__radio-button::after { //when the radio is 'checked' change the child of the sibling
        opacity: 1;
    }
}